package fr.uga.iut2.genconf.vue;

import java.awt.Color;
import java.util.HashSet;
import java.util.Optional;
import java.util.Set;
import javax.swing.JSpinner;
import org.apache.commons.validator.routines.EmailValidator;
import fr.uga.iut2.genconf.modele.*;


public class VueCreationCommunication extends javax.swing.JPanel {
    private final GUI gui;
    private Set<String> communicationsExistantes;
    private boolean valideCorres, valideComm;
    private Session sess;

    /**
     * Creates new form VueCreationConference
     */
    public VueCreationCommunication(GUI gui) {
        this.gui = gui;
        this.communicationsExistantes = new HashSet<>();
        this.valideCorres = false;
        this.valideComm = false;

        // création de l'interface générée
        this.initComponents();

        // configuration des composants de l'interface (à faire après la création de l'interface)
        // format de date
        // désactivation du bouton de création
        this.creerButton.setEnabled(false);
    }

    public void setComsExistantes(final Set<String> communicationsExistantes) {
        assert communicationsExistantes != null;
        this.communicationsExistantes = communicationsExistantes;
    }
    
    public void setSession(Session s){
        this.sess = s;
        this.labelCom.setText(this.labelCom.getText()+" dans la session "+this.sess.getNom());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        communication = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nomCommunication = new javax.swing.JTextField();
        label1 = new java.awt.Label();
        typeComm = new javax.swing.JComboBox<>();
        correspondant = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        corresNom = new javax.swing.JTextField();
        corresPrenom = new javax.swing.JTextField();
        corresEmail = new javax.swing.JTextField();
        creerButton = new javax.swing.JButton();
        annulerButton = new javax.swing.JButton();
        labelCom = new javax.swing.JLabel();
        precedent = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        communication.setBorder(javax.swing.BorderFactory.createTitledBorder("Communication"));

        jLabel1.setText("Nom de la communication :");

        nomCommunication.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                verifCom(evt);
            }
        });

        label1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        label1.setText("Type communication :");

        typeComm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "keynote", "atelier", "article" }));

        javax.swing.GroupLayout communicationLayout = new javax.swing.GroupLayout(communication);
        communication.setLayout(communicationLayout);
        communicationLayout.setHorizontalGroup(
            communicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(communicationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(communicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(communicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomCommunication, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                    .addGroup(communicationLayout.createSequentialGroup()
                        .addComponent(typeComm, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        communicationLayout.setVerticalGroup(
            communicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(communicationLayout.createSequentialGroup()
                .addGroup(communicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nomCommunication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(communicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typeComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        correspondant.setBorder(javax.swing.BorderFactory.createTitledBorder("Correspondant"));

        jLabel4.setText("Nom :");

        jLabel5.setText("Prénom :");

        jLabel6.setText("Email :");

        corresNom.setName(""); // NOI18N

        corresEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                verificationCorres(evt);
            }
        });

        javax.swing.GroupLayout correspondantLayout = new javax.swing.GroupLayout(correspondant);
        correspondant.setLayout(correspondantLayout);
        correspondantLayout.setHorizontalGroup(
            correspondantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(correspondantLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(correspondantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(correspondantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(corresNom, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                    .addComponent(corresPrenom)
                    .addComponent(corresEmail))
                .addContainerGap())
        );
        correspondantLayout.setVerticalGroup(
            correspondantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(correspondantLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(correspondantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(corresNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(correspondantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(corresPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(correspondantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(corresEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        corresNom.getAccessibleContext().setAccessibleName("corresNom");

        creerButton.setText("Créer");
        creerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creerButtonActionPerformed(evt);
            }
        });

        annulerButton.setText("Annuler");
        annulerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerButtonActionPerformed(evt);
            }
        });

        labelCom.setText("Créer une communication ");

        precedent.setText("Precedent");
        precedent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precedentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(correspondant, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(communication, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelCom)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(precedent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(annulerButton)
                        .addGap(18, 18, 18)
                        .addComponent(creerButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(communication, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(correspondant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precedent)
                    .addComponent(annulerButton)
                    .addComponent(creerButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void creerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creerButtonActionPerformed
         IHM.InfosUtilisateur corres = new IHM.InfosUtilisateur(
                this.corresEmail.getText().trim().toLowerCase(),
                this.corresNom.getText().trim(),
                this.corresPrenom.getText().trim()
         );


         // Infos sur la nouvelle conference
         IHM.InfosCommunication nlleComm = new IHM.InfosCommunication(
                 this.nomCommunication.getText(),
                 this.typeComm.getActionCommand(),
                 corres,
                 sess
         );

         this.gui.creerCommunication(Optional.of(nlleComm));
    }//GEN-LAST:event_creerButtonActionPerformed

    private void annulerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerButtonActionPerformed
        this.gui.creerCommunication(Optional.empty());
    }//GEN-LAST:event_annulerButtonActionPerformed

    private void precedentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precedentActionPerformed
        this.gui.toVoirPlusCommunications(sess.getNom(), sess.getNomConf());
    }//GEN-LAST:event_precedentActionPerformed

    private void verificationCorres(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_verificationCorres
        boolean validEmail;
        String nom, prenom;
        EmailValidator validator = EmailValidator.getInstance(false, false);

        nom = this.corresNom.getText().trim();
        prenom = this.corresPrenom.getText().trim();
        validEmail = validator.isValid(this.corresEmail.getText().trim().toLowerCase())
                && !freeEmail(this.corresEmail.getText().trim().toLowerCase());
        this.corresPrenom.setForeground(validEmail ? Color.black : Color.red);

        this.valideCorres = validEmail
                 && (nom != null) && (nom.length() > 0)
                 && (prenom != null) && (prenom.length() > 0);

        this.creerButton.setEnabled(this.valideCorres&&this.valideComm);
    }//GEN-LAST:event_verificationCorres

    private void verifCom(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_verifCom
        this.valideComm = !this.communicationsExistantes.contains(this.nomCommunication.getText().trim());
        this.nomCommunication.setForeground(this.valideComm ? Color.black : Color.red);
        this.creerButton.setEnabled(this.valideCorres&&this.valideComm);
    }//GEN-LAST:event_verifCom
    
    private boolean freeEmail(String email){
        return this.gui.freeEmail(email);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton annulerButton;
    private javax.swing.JPanel communication;
    private javax.swing.JTextField corresEmail;
    private javax.swing.JTextField corresNom;
    private javax.swing.JTextField corresPrenom;
    private javax.swing.JPanel correspondant;
    private javax.swing.JButton creerButton;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private java.awt.Label label1;
    private javax.swing.JLabel labelCom;
    private javax.swing.JTextField nomCommunication;
    private javax.swing.JButton precedent;
    private javax.swing.JComboBox<String> typeComm;
    // End of variables declaration//GEN-END:variables
}
